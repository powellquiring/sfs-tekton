apiVersion: tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: 10-build
spec:
  triggers:
    - binding:
        name: simple-binding
      template:
        name: tt10-build
---
apiVersion: tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: simple-binding
---
apiVersion: tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: tt10-build
spec:
  params:
    - name: GIT_REPO
    - name: X
  resourcetemplates:
    - apiVersion: v1
      kind: Secret
      metadata:
        name: cd-secret
      type: Opaque
      stringData:
        API_KEY: $(params.API_KEY)
    - apiVersion: tekton.dev/v1alpha1
      kind: PipelineRun
      metadata:
        name: pipelinerun-$(uid)
      spec:
        pipelineRef:
          name: pipeline-input-parameter-variable
        params:
          - name: task-pvc
            value: pipelinerun-$(uid)-pvc
          - name: GIT_REPO
            value: $(params.GIT_REPO)
          - name: X
            value: $(params.X)
---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: pipeline-input-parameter-variable
spec:
  params:
    - name: task-pvc
    - name: GIT_REPO
    - name: X
  tasks:
    - name: t1
      params:
        - name: task-pvc
          value: $(params.task-pvc)
        - name: GIT_REPO
          value: $(params.GIT_REPO)
        - name: X
          value: $(params.X)
      taskRef:
        name: the-var-task
    - name: t2
      params:
        - name: task-pvc
          value: $(params.task-pvc)
        - name: GIT_REPO
          value: $(params.GIT_REPO)
        - name: X
          value: $(params.X)
      taskRef:
        name: the-var-task
      runAfter:
        - t1
---
# shared task
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: the-var-task
spec:
  inputs:
    params:
      - name: task-pvc
      - name: GIT_REPO
      - name: X
  steps:
    - name: echoenvvar
      image: ubuntu
      env:
        - name: task_pvc
          value: $(inputs.params.task-pvc)
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: cd-secret
              key: API_KEY
        - name: GIT_REPO
          value: $(inputs.params.GIT_REPO)
        - name: X
          value: $(inputs.params.X)
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -x
          echo 00
          echo env task_pvc: $task_pvc
          echo env API_KEY: $API_KEY
          echo env GIT_REPO: $GIT_REPO
          echo env X: $X
          ls /working
          echo hi >> /working/hi
          cat /working/hi
      volumeMounts:
        - mountPath: /working
          name: task-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
